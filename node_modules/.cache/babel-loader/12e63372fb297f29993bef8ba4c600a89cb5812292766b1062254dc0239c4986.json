{"ast":null,"code":"var _jsxFileName = \"/Users/cavliucigor/Desktop/jw-bot/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Настроить обработку входящих обновлений на вашем сервере.\n    // Этот пример использует axios, но вы можете использовать другие библиотеки.\n    const url = 'https://comfortable-efficacious-rubidium.glitch.me/api'; // Замените на ваш URL\n    axios.post(url).then(response => {\n      const newMessages = response.data.messages;\n      setMessages(response);\n    });\n  }, []);\n  useEffect(() => {\n    // Отправка POST-запроса на ваш эндпоинт\n    axios.post('https://comfortable-efficacious-rubidium.glitch.me/getBotData').then(response => {\n      setData(response.data.message); // Обработка полученных данных\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, []);\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BxyhfWWpnSbijcu7qFgrB+X/mWM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","messages","setMessages","url","post","then","response","newMessages","data","setData","message","catch","error","console","log","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cavliucigor/Desktop/jw-bot/src/App.js"],"sourcesContent":["import './App.css';\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        // Настроить обработку входящих обновлений на вашем сервере.\n        // Этот пример использует axios, но вы можете использовать другие библиотеки.\n        const url = 'https://comfortable-efficacious-rubidium.glitch.me/api'; // Замените на ваш URL\n        axios.post(url).then(response => {\n            const newMessages = response.data.messages;\n            setMessages(response);\n        });\n    }, []);\n\n    useEffect(() => {\n        // Отправка POST-запроса на ваш эндпоинт\n        axios.post('https://comfortable-efficacious-rubidium.glitch.me/getBotData')\n            .then(response => {\n                setData(response.data.message); // Обработка полученных данных\n            })\n            .catch(error => {\n                console.error('Error:', error);\n            });\n    }, []);\n    \n    console.log(messages)\n\n  return (\n    <div className=\"App\">\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ;IACA;IACA,MAAMS,GAAG,GAAG,wDAAwD,CAAC,CAAC;IACtEP,KAAK,CAACQ,IAAI,CAACD,GAAG,CAAC,CAACE,IAAI,CAACC,QAAQ,IAAI;MAC7B,MAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAI,CAACP,QAAQ;MAC1CC,WAAW,CAACI,QAAQ,CAAC;IACzB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACZ;IACAE,KAAK,CAACQ,IAAI,CAAC,+DAA+D,CAAC,CACtEC,IAAI,CAACC,QAAQ,IAAI;MACdG,OAAO,CAACH,QAAQ,CAACE,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;EAEvB,oBACEH,OAAA;IAAKiB,SAAS,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACnB,EAAA,CA/BQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}